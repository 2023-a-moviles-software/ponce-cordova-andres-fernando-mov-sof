/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eventoLugar.vista

import com.andresponce.deber.dao.DaoFactory
import java.awt.EventQueue
import java.awt.event.ActionEvent
import java.util.logging.Level
import java.util.logging.Logger
import javax.swing.*

/**
 *
 * @author escritorio.virtual20
 */
class EliminarLugar(): JFrame() {
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private var parent: JFrame? = null
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        jLabel1 = JLabel()
        jTextFieldIDLugarBorrar = JTextField()
        jButtonBorrarLugar = JButton()
        defaultCloseOperation = DISPOSE_ON_CLOSE
        jLabel1!!.text = "ID Lugar a borrar:"
        jButtonBorrarLugar!!.text = "Borrar"
        jButtonBorrarLugar!!.addActionListener { evt -> jButtonBorrarLugarActionPerformed(evt) }
        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldIDLugarBorrar)
                        .addContainerGap()
                )
                .addGroup(
                    layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButtonBorrarLugar)
                        .addContainerGap(169, Short.MAX_VALUE.toInt())
                )
        )
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(
                            layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(
                                    jTextFieldIDLugarBorrar,
                                    GroupLayout.PREFERRED_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.PREFERRED_SIZE
                                )
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBorrarLugar)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                )
        )
        pack()
    } // </editor-fold>//GEN-END:initComponents

    private fun jButtonBorrarLugarActionPerformed(evt: ActionEvent) { //GEN-FIRST:event_jButtonBorrarLugarActionPerformed
        try {
            val id = jTextFieldIDLugarBorrar!!.text.toInt()
            //Le pregunta al usuario si esta seguro de eliminar el lugar
            val opcion = JOptionPane.showConfirmDialog(
                null,
                "¿Está seguro de eliminar el lugar con ID $id?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
            )
            if (opcion == JOptionPane.YES_OPTION) {
                DaoFactory.daoFactory.getLugarDao().eliminar(id)
                JOptionPane.showMessageDialog(null, "Lugar eliminado correctamente")
                (this.parent as PantallaPrincipal).actualizarTablas()
                dispose()
            }
        }catch (e: Exception){
            JOptionPane.showMessageDialog(null, "Error al borrar el lugar\n${e.message}")
        }
    } //GEN-LAST:event_jButtonBorrarLugarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var jButtonBorrarLugar: JButton? = null
    private var jLabel1: JLabel? = null
    private var jTextFieldIDLugarBorrar: JTextField? = null // End of variables declaration//GEN-END:variables

    /**
     * Creates new form EliminarEvento
     */
    init {
        initComponents()
    }

    constructor(parent: JFrame?) : this() {
        this.parent = parent
    }

    companion object {
        /**
         * @param args the command line arguments
         */
        @JvmStatic
        fun main(args: Array<String>) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
            try {
                for (info in UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus" == info.name) {
                        UIManager.setLookAndFeel(info.className)
                        break
                    }
                }
            } catch (ex: ClassNotFoundException) {
                Logger.getLogger(EliminarLugar::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: InstantiationException) {
                Logger.getLogger(EliminarLugar::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: IllegalAccessException) {
                Logger.getLogger(EliminarLugar::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: UnsupportedLookAndFeelException) {
                Logger.getLogger(EliminarLugar::class.java.name).log(Level.SEVERE, null, ex)
            }
            //</editor-fold>
            //</editor-fold>

            /* Create and display the form */EventQueue.invokeLater { EliminarLugar().isVisible = true }
        }
    }
}